JavaScript Execution Context

JavaScript single threaded hai

->Global Execution Context
    ->this
->Function Execution Context
->Eval Execution Context

->Memory Creation Phase / Creation Phase
    ->jo bhi variable liye hain unke liye jagah allocate hota hai ismain execution nahi hota

->Execution Phase
    ->Ismain execution hota hai


let val1 = 10
let val2 = 5
function addNum(num1, num2){
    let total = num1 + num2
    return total
}
let result1 = addNum(val1, val2)
let result2 = addNum(10, 2)



kese execute hog aye code uska process:-
1.Global Execution / Environment
    //koi bhi code ho ye global execution se run hota hai or isko this ke andar allocate karte hain

2.Memory Phase /  Creation Phase
    //sare variables ko ikkatha kiya jata hai or bus rakha rehta hai 

->> val1 -> undefined
->> val2 -> undefined
->> addNum ->defination
->> result1 -> undefined
->> result2 -> undefined

3.Execution Phase
val1 <- 10
val2 <- 5
addNum -> [new variable Environment + Execution thread]  
         //ye box ka kaam ho jane ke baad delete ho jata hai
        //jitni baar execution hoga utni baar ek naya box banega

Memory Phase                  execution Context
val1 -> undefined             num1 -> 10
val1 -> undefined             num2 -> 15
val2 -> undefined             total -> 15
total -> undefined            


// browser part

function one(){
    console.log("one")
    two()
}
function two(){
   console.log("two") 
    three()
}
function three(){
    console.log("three")
}

one()
two()
three()